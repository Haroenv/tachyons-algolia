/**
 * Force the element to take the whole width and height of the screen, creating
 * a complete overlay.
 *
 * Note: tachyons.css already comes with a .absolute--fill classe that has
 * a similar purpose (except it does not include the `position: absolute` part,
 * requiring you to add .absolute to your element). This class is a shorthand to
 * it, and also is easier to memorize as you usually think of setting all
 * 4 attributes to 0 mentally.
 **/
.absolute-0 {
  position: absolute;

  @extend .absolute--fill;
}

/**
 * Use the default scale to position elements, both with positive and negative
 * values.
 *
 * Note: tachyons.css only comes with styling that covers the [-2, 2] range.
 * Here, we are simply extending it to the whole [-5, 5] range
 **/
.top-3 {
  top: $spacing-extra-large;
}

.right-3 {
  right: $spacing-extra-large;
}

.bottom-3 {
  bottom: $spacing-extra-large;
}

.left-3 {
  left: $spacing-extra-large;
}

.top-4 {
  top: $spacing-extra-extra-large;
}

.right-4 {
  right: $spacing-extra-extra-large;
}

.bottom-4 {
  bottom: $spacing-extra-extra-large;
}

.left-4 {
  left: $spacing-extra-extra-large;
}

.top-5 {
  top: $spacing-extra-extra-extra-large;
}

.right-5 {
  right: $spacing-extra-extra-extra-large;
}

.bottom-5 {
  bottom: $spacing-extra-extra-extra-large;
}

.left-5 {
  left: $spacing-extra-extra-extra-large;
}

.top--3 {
  top: -$spacing-extra-large;
}

.right--3 {
  right: -$spacing-extra-large;
}

.bottom--3 {
  bottom: -$spacing-extra-large;
}

.left--3 {
  left: -$spacing-extra-large;
}

.top--4 {
  top: -$spacing-extra-extra-large;
}

.right--4 {
  right: -$spacing-extra-extra-large;
}

.bottom--4 {
  bottom: -$spacing-extra-extra-large;
}

.left--4 {
  left: -$spacing-extra-extra-large;
}

.top--5 {
  top: -$spacing-extra-extra-extra-large;
}

.right--5 {
  right: -$spacing-extra-extra-extra-large;
}

.bottom--5 {
  bottom: -$spacing-extra-extra-extra-large;
}

.left--5 {
  left: -$spacing-extra-extra-extra-large;
}

/**
 * Allowing to position elements based on a percentage. Covers the whole 0-100%
 * range in increments of 5%.
 **/
@for $i from 1 through 20 {
  $percent: $i * 5;

  .top-#{$percent} {
    top: #{$percent + "%"};
  }

  .right-#{$percent} {
    right: #{$percent + "%"};
  }

  .bottom-#{$percent} {
    bottom: #{$percent + "%"};
  }

  .left-#{$percent} {
    left: #{$percent + "%"};
  }

  .top--#{$percent} {
    top: unquote("- #{$percent + "%"}");
  }

  .right--#{$percent} {
    right: unquote("- #{$percent + "%"}");
  }

  .bottom--#{$percent} {
    bottom: unquote("- #{$percent + "%"}");
  }

  .left--#{$percent} {
    left: unquote("- #{$percent + "%"}");
  }
}

/**
 * Faster way to vertically or horizontally position an element.
 *
 * Note: We are using `transform` to perform a translate, so it only works if
 * you're not also adding another transform to the same element
 **/
.absolute-center-horizontal {
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
}

.absolute-center-vertical {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}

.absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translateX(-50%) translateY(-50%);
}
