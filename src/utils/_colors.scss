/**
 * Adding Algolia colors in addition to basic tachyons colors. It includes text,
 * background and border colors. They all include various opacity levels and the
 * :hover modifier.
 *
 * Examples with koromiko
 * .koromiko:             Text color is Koromiko
 * .koromiko-70:          Text color with 70% opacity
 * .hover-koromiko:       Text color only on hover
 * .hover-koromiko-70:    Text color with 70% opacity only on hover

 * .bg-koromiko:          Background color 
 * .bg-koromiko-30:       Background color with 30% opacity
 * .hover-bg-koromiko:    Background color 
 * .hover-bg-koromiko-30: Background color with 30% opacity

 * .b--koromiko:          Border color
 * .b--koromiko-50:       Border color with 50% opacity
 * .hover-b--koromiko:    Border color
 * .hover-b--koromiko-50: Border color with 50% opacity
 **/
@each $color in $colors {
  $name: nth($color, 1);
  $value: nth($color, 2);

  // Text color
  .#{$name} { color: $value }
  // Text color on hover
  .hover-#{$name}:hover { color: $value }

  // Background color
  .bg-#{$name} { background-color: $value }
  // Background color on hover
  .hover-bg-#{$name}:hover { background-color: $value }

  // Border color
  .b--#{$name} { border-color: $value }
  // Border color on hover
  .hover-b--#{$name}:hover { border-color: $value }

  // Same for levels of opacity by 10 increment
  @for $opacity from 1 through 9 {
    // Text color
    .#{$name}-#{$opacity}0 { color: rgba($value, $opacity / 10); }
    .hover-#{$name}-#{$opacity}0:hover { color: rgba($value, $opacity / 10); }

    // Background color
    .bg-#{$name}-#{$opacity}0 { background-color: rgba($value, $opacity / 10); }
    .hover-bg-#{$name}-#{$opacity}0:hover { background-color: rgba($value, $opacity / 10); }

    // Border color
    .b--#{$name}-#{$opacity}0 { border-color: rgba($value, $opacity / 10); }
    .hover-b--#{$name}-#{$opacity}0:hover { border-color: rgba($value, $opacity / 10); }
  }
}


/**
 * Allow for colored bullets (> ) at the start of elements
 **/
@each $color in $colors {
  $name: nth($color, 1);
  $value: nth($color, 2);

  // Bullets
  .bullet-#{$name}:before { content: "> "; color: #{$value} }
}
